{"version":3,"sources":["../../src/shared/ThisContext.js"],"names":["util","formatColorNumber","value","is","Number","clamp","PROP","Symbol","PROPS","children","key","childContextTypes","type","object","width","default","numberOrString","resetOn","height","cropMarks","bool","number","margin","align","propTypes","header","string","footer","hr","backdrop","format","background","scroll","oneOf","style","tools","element","getPropParent","ns","obj","length","takeLast","UIHContext","page","isCurrent","currentSuite","current","get","id","suite","options","undefined","Function","state","setCurrent","result","Object","keys","forEach","Error","parts","split","take","propName","join","parent","log","clear","clearLog","propFunc","call","reset","val","props","merge","currentContextTypes","context","map","component","warn","omit","path","loadComponent"],"mappings":"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","file":"ThisContext.js","sourcesContent":["import * as util from 'js-util';\r\n\r\nimport invariant from 'invariant';\r\nimport AlignmentContainer from 'react-atoms/components/AlignmentContainer';\r\nimport R from 'ramda';\r\nimport { PropTypes } from 'react-schema';\r\n\r\nimport api from './api-internal';\r\nimport log from './log';\r\nimport page from './page';\r\n\r\n\r\nconst formatColorNumber = (value) => {\r\n  if (R.is(Number, value)) {\r\n    value = R.clamp(0, 1, value);\r\n  }\r\n  return value;\r\n};\r\n\r\nconst PROP = Symbol('Prop');\r\nconst PROPS = {\r\n  children: {\r\n    key: 'componentChildren', // Stored on {current} as this.\r\n  },\r\n  childContextTypes: {\r\n    key: 'componentChildContextTypes',\r\n    type: PropTypes.object,\r\n  },\r\n  width: {\r\n    default: 'auto',\r\n    type: PropTypes.numberOrString,\r\n    resetOn: null,\r\n  },\r\n  height: {\r\n    default: 'auto',\r\n    type: PropTypes.numberOrString,\r\n    resetOn: null,\r\n  },\r\n  cropMarks: {\r\n    default: true,\r\n    type: PropTypes.bool,\r\n  },\r\n  'cropMarks.size': {\r\n    default: 25,\r\n    type: PropTypes.number,\r\n  },\r\n  'cropMarks.offset': {\r\n    default: 5,\r\n    type: PropTypes.number,\r\n  },\r\n  margin: {\r\n    default: 60,\r\n    type: PropTypes.number,\r\n  },\r\n  align: {\r\n    default: 'center top',\r\n    type: AlignmentContainer.propTypes.align,\r\n  },\r\n  header: {\r\n    type: PropTypes.string,\r\n  },\r\n  footer: {\r\n    type: PropTypes.string,\r\n  },\r\n  hr: {\r\n    default: true,\r\n    type: PropTypes.bool,\r\n  },\r\n  backdrop: {\r\n    default: 0,\r\n    type: PropTypes.numberOrString,\r\n    format: formatColorNumber,\r\n  },\r\n  background: {\r\n    type: PropTypes.numberOrString,\r\n    format: formatColorNumber,\r\n  },\r\n  scroll: {\r\n    default: false,\r\n    type: PropTypes.oneOf([true, false, 'x', 'y', 'x:y']),\r\n  },\r\n  style: {\r\n    type: PropTypes.object,\r\n  },\r\n  tools: {\r\n    type: PropTypes.element,\r\n  },\r\n};\r\n\r\n\r\nconst getPropParent = (ns, obj) => (\r\n  ns.length === 0\r\n      ? obj\r\n      : getPropParent(R.takeLast(ns.length - 1, ns), obj[ns[0]])\r\n);\r\n\r\n\r\n\r\n/**\r\n * The [this] context that is passed into the [describe/it]\r\n * BDD methods.\r\n */\r\nexport default class UIHContext {\r\n  constructor() {\r\n    // Determine whether this is the currently loaded suite.\r\n    const isCurrent = () => {\r\n      const currentSuite = api.current.get('suite');\r\n      return (currentSuite && currentSuite.id === this.suite.id);\r\n    };\r\n\r\n    // Read|Write helper for data-property methods.\r\n    this[PROP] = (key, value, options) => {\r\n      options = options || PROPS[key] || {};\r\n      key = options.key || key; // The property options may provide an alternative\r\n                                // key to store as on the {current} map.\r\n\r\n      // WRITE.\r\n      if (value !== undefined) {\r\n        // Format the value if a formatter function was provided.\r\n        if (R.is(Function, options.format)) {\r\n          value = options.format(value);\r\n        }\r\n\r\n\r\n        // Reset the value if required.\r\n        if (options.resetOn !== undefined && value === options.resetOn) {\r\n          value = options.default;\r\n        }\r\n\r\n        // Store the value.\r\n        this[PROP].state[key] = value;\r\n        if (isCurrent()) {\r\n          api.setCurrent(this[PROP].state); // Update the state after every update\r\n        }\r\n        return this; // When writing the [this] context is returned.\r\n                     // This allows for chaining of write operations.\r\n      }\r\n      // READ.\r\n      let result = this[PROP].state[key];\r\n      if (result === undefined) { result = options.default; }\r\n      return result;\r\n    };\r\n    this[PROP].state = {};\r\n\r\n    // Create property functions.\r\n    Object.keys(PROPS).forEach(key => {\r\n      if (this[key]) { throw new Error(`Property named '${ key }' already exists.`); }\r\n\r\n      // Ensure nested property extensions are added to the hierarchy.\r\n      // ie. functions as properites of parent functions, for example:\r\n      //     - cropMarks\r\n      //     - cropMarks.size\r\n      const parts = key.split('.');\r\n      const ns = R.take(parts.length - 1, parts);\r\n      const propName = R.takeLast(1, parts).join('.');\r\n      const parent = getPropParent(ns, this);\r\n\r\n      // Store the propery.\r\n      parent[propName] = (value) => this[PROP](key, value);\r\n    });\r\n\r\n    // Property extension methods.\r\n    this.log.clear = () => api.clearLog();\r\n  }\r\n\r\n\r\n  /*\r\n  API for manipulating the containing page.\r\n  */\r\n  page = page(this);\r\n\r\n\r\n  /**\r\n   * Converts to an object of all current values.\r\n   */\r\n  toValues() {\r\n    const result = {};\r\n    Object.keys(PROPS).forEach(key => {\r\n      const propFunc = util.ns(this, key);\r\n      if (R.is(Function, propFunc)) {\r\n        result[key] = propFunc.call(this);\r\n      } else {\r\n        result[key] = this[PROP].state[key];\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n\r\n  /**\r\n   * Resets the UI Harness.\r\n   */\r\n  reset(options) { api.reset(options); }\r\n\r\n\r\n  /**\r\n   * Cumulatively sets property values on the current component.\r\n   * @param {object} value:  An object containing {prop:value} to add\r\n   */\r\n  props(value) {\r\n    let val = value;\r\n    // WRITE.\r\n    if (R.is(Object, val)) {\r\n      // Cumulatively add given props to the existing\r\n      // props on the component.\r\n      const props = this[PROP]('componentProps');\r\n      // No need to clone when using R.merge\r\n      val = R.merge(props, val);\r\n    }\r\n    // READ.\r\n    return this[PROP]('componentProps', val);\r\n  }\r\n\r\n  /**\r\n   * Cumulatively sets context values on the current component.\r\n   * @param {object} value:  An object containing {context: value} to add\r\n   */\r\n  context(value) {\r\n    const currentContextTypes = this[PROP]('componentChildContextTypes');\r\n\r\n    invariant(\r\n      // If we're setting the value to nothing, it doesn't need to have a context type\r\n      currentContextTypes || !value,\r\n      'Make sure you set `this.contextTypes` before trying to set `this.context`.'\r\n    );\r\n\r\n    if (R.is(Object, value)) {\r\n      // Cumulatively add given props to the existing context\r\n      const context = this[PROP]('componentContext') || {};\r\n      R.map(\r\n        key => invariant(\r\n          currentContextTypes[key],\r\n          `Context key ${ key } not specified in contextTypes. Add to context types using this.contextTypes` // eslint-disable-line max-len\r\n        ),\r\n        R.keys(value)\r\n      );\r\n      value = R.merge(context, value);\r\n    }\r\n\r\n    return this[PROP](\r\n      'componentContext',           // Set the component's context to the value passed\r\n      value,                        // and make sure it conforms to the context types\r\n      { type: PropTypes.object },   // specified when the component was loaded.\r\n    );\r\n  }\r\n\r\n\r\n  /**\r\n   * OBSOLETE: Stub for the `component` method, emitting a warning that it will\r\n   * be deprecated in a future version.\r\n   */\r\n  load(component) {\r\n    log.warn('The `load` method is deprecated. Please use the `this.component` method.');\r\n    return this.component(component);\r\n  }\r\n\r\n\r\n\r\n\r\n  /**\r\n   * Loads the given component.\r\n   *\r\n   * @param component:  The component Type (e.g. MyComponent)\r\n   *                    or created component element (e.g.: <MyComponent/>).\r\n   */\r\n  component(component) {\r\n    invariant(component, 'Cannot load: a component was not specified (undefined/null)');\r\n\r\n    // Create a props object of any props set by this.props with props\r\n    // passed down by JSX.\r\n    const props = R.merge(\r\n      this[PROP]('componentProps'), // Existing props from this.props()\r\n      R.omit('children', component.props) // Don't include props.children in\r\n                                          // props plucked from JSX\r\n    );\r\n\r\n    // Update the props in internal state.\r\n    this[PROP]('componentProps', props);\r\n\r\n    // Find the children of the passed JSX component (if any).\r\n    const children = R.path(['props', 'children'], component);\r\n\r\n    // Update internal state with these children.\r\n    if (children) this[PROP]('componentChildren', children);\r\n\r\n    // Load the component in the window.\r\n    api.loadComponent(component);\r\n\r\n    // Update the window state with internal state\r\n    api.setCurrent(this[PROP].state);\r\n    return this;\r\n  }\r\n\r\n\r\n  /**\r\n   * Unloads the currently loaded component.\r\n   */\r\n  unload() {\r\n    api.component(null);\r\n    return this;\r\n  }\r\n\r\n\r\n  /**\r\n   * Logs a value to the output.\r\n   * @param {array} value: The value or values to append.\r\n   */\r\n  log(...value) {\r\n    api.log(value);\r\n    return this;\r\n  }\r\n}\r\n"]}