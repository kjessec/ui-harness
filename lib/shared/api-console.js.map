{"version":3,"sources":["../../src/shared/api-console.js"],"names":["UIHarness","log","clear","clearLog","hard","reset","value"],"mappings":";;;;;;;;AAAA;;;;;;;;AAGA;;;;IAIMA,S;AACJ,uBAAc;AAAA;;AACZ,SAAKC,GAAL,CAASC,KAAT,GAAiB;AAAA,aAAM,sBAAIC,QAAJ,EAAN;AAAA,KAAjB;AACD;;AAED;;;;;;;;;4BAK6B;AAAA,qFAAJ,EAAI;AAAA,2BAArBC,IAAqB;AAAA,UAArBA,IAAqB,6BAAd,KAAc;;AAC3B,4BAAIC,KAAJ,CAAU,EAAED,UAAF,EAAV;AACA,aAAO,IAAP;AACD;;AAGD;;;;;;;0BAIc;AAAA,wCAAPE,KAAO;AAAPA,aAAO;AAAA;;AAAE,4BAAIL,GAAJ,CAAQK,KAAR;AAAiB;;;;;;kBAIpB,IAAIN,SAAJ,E","file":"api-console.js","sourcesContent":["import api from './api-internal';\r\n\r\n\r\n/**\r\n * The API for manipulating the UIHarness via\r\n * the browser console.\r\n */\r\nclass UIHarness {\r\n  constructor() {\r\n    this.log.clear = () => api.clearLog();\r\n  }\r\n\r\n  /**\r\n   * Resets the state of the UIHarness.\r\n   * @param {boolean} hard: Flag indicating if all state from local-storage\r\n   *                        should be cleared away, or just current selection state.\r\n   */\r\n  reset({ hard = false } = {}) {\r\n    api.reset({ hard });\r\n    return true;\r\n  }\r\n\r\n\r\n  /**\r\n   * Logs a value to the output.\r\n   * @param {array} value: The value or values to append.\r\n   */\r\n  log(...value) { api.log(value); }\r\n}\r\n\r\n\r\nexport default new UIHarness();\r\n"]}