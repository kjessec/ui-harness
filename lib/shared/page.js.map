{"version":3,"sources":["../../src/shared/page.js"],"names":["IS_BROWSER","window","elementExists","parentElement","tag","props","childElement","elements","document","head","getElementsByTagName","childText","div","createElement","appendChild","innerText","hasMatchingContent","el","isMatchingProp","key","is","Function","hasMatchingProps","all","Object","keys","isMatch","any","context","insert","exists","forEach","insertLink","insertFont","url","Array","href","item","rel","type","insertScript","value","String","src","startsWith","location","origin","createTextNode"],"mappings":"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","file":"page.js","sourcesContent":["import R from 'ramda';\r\nconst IS_BROWSER = (typeof window !== 'undefined');\r\n\r\n\r\nconst elementExists = (parentElement, tag, props = {}, childElement) => {\r\n  const elements = document.head.getElementsByTagName(tag);\r\n\r\n  // Get the child <element> content as text for matching.\r\n  let childText = '';\r\n  if (childElement) {\r\n    const div = document.createElement('div');\r\n    div.appendChild(childElement);\r\n    childText = div.innerText;\r\n  }\r\n\r\n  const hasMatchingContent = (el) => el.innerText === childText;\r\n  const isMatchingProp = (el, key) => R.is(Function, props[key]) || el[key] === props[key];\r\n  const hasMatchingProps = (el) => R.all(key => isMatchingProp(el, key), Object.keys(props));\r\n  const isMatch = (el) => hasMatchingProps(el) && hasMatchingContent(el);\r\n  return R.any(isMatch, elements);\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * API for manipulating the containing page.\r\n */\r\nexport default (context) => ({\r\n  /**\r\n   * Inserts a new element into the DOM.\r\n   *\r\n   * WARNING: Typically you don't want to do this when using React.\r\n   *          This is for things like inserting a SCRIPT tag, or a\r\n   *          LINK into the head of the document.\r\n   *\r\n   * @param {DomElement} parentElement: The element to append.\r\n   * @param {String} tag: The name of the element tag.\r\n   * @param {Object} props: An object containing the {attr:value} to apply.\r\n   * @param {Object} childElement: The child of the new element.\r\n   *\r\n   * @return {Object} The 'this' context for chaining.\r\n   */\r\n  insert(parentElement, tag, props = {}, childElement) {\r\n    if (IS_BROWSER) {\r\n      const exists = elementExists(parentElement, tag, props, childElement);\r\n      if (!exists) {\r\n        const el = document.createElement(tag);\r\n        Object.keys(props).forEach(key => { el[key] = props[key]; });\r\n        if (childElement) {\r\n          el.appendChild(childElement);\r\n        }\r\n        parentElement.appendChild(el);\r\n      }\r\n    }\r\n    return context;\r\n  },\r\n\r\n\r\n  /**\r\n   * Inserts a <link> into the <head>.\r\n   * @param {Object} props: An object containing the {attr:value} to apply.\r\n   * @return {Object} The 'this' context for chaining.\r\n   */\r\n  insertLink(props = {}) {\r\n    if (IS_BROWSER) {\r\n      this.insert(document.head, 'link', props);\r\n    }\r\n    return context;\r\n  },\r\n\r\n\r\n  /**\r\n   * Inserts a <link> to a webfont into the <head>.\r\n   * @param {String|Array} url: The URL(s) to the web-font.\r\n   * @return {Object} The 'this' context for chaining.\r\n   */\r\n  // insertFont: (url) => this.insertLink({ rel: 'stylesheet', type: 'text/css' }),\r\n  insertFont(url) {\r\n    if (IS_BROWSER) {\r\n      url = R.is(Array, url) ? url : [url];\r\n      url.forEach(item => {\r\n        this.insertLink({ href: item, rel: 'stylesheet', type: 'text/css' });\r\n      });\r\n    }\r\n    return context;\r\n  },\r\n\r\n\r\n  /**\r\n   * Inserts a script.\r\n   * @param {String|Object} value:\r\n   *                          - If a script is passed it is considered the script content itself.\r\n   *                          - If an object is passed it is considered the props of the <script>\r\n   *                            use this to pass a { src } value.\r\n   *\r\n   */\r\n  insertScript(value) {\r\n    if (IS_BROWSER) {\r\n      if (R.is(Object, value)) {\r\n        // Ensure the src has a full URL.\r\n        //    Note: This is required for matching the existence of the <script> in the future\r\n        //    as the browser automatically inserts the full URL on the DOM element itself.\r\n        if (R.is(String, value.src) && value.src.startsWith('/')) {\r\n          value.src = `${ location.origin }${ value.src }`;\r\n        }\r\n        this.insert(document.head, 'script', value);\r\n      } else if (R.is(String, value)) {\r\n        // Raw JS code has been given.  Insert it within the script.\r\n        this.insert(document.head, 'script', {}, document.createTextNode(value));\r\n      }\r\n    }\r\n    return context;\r\n  },\r\n});\r\n"]}