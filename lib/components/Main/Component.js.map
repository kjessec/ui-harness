{"version":3,"sources":["../../../src/components/Main/Component.jsx"],"names":["Style","Component","current","props","width","get","height","size","background","border","undefined","is","Number","base","position","backgroundColor","componentInstance","isNil","component","styles","styleElement","styleRules","createElement","scopeSelector","rules","element","type","ref","c","handleLoaded","children","childContextTypes","cropMarksSize","propTypes","instanceOf","Map","isRequired","defaultProps"],"mappings":"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","file":"Component.js","sourcesContent":["import Immutable from 'immutable';\r\nimport R from 'ramda';\r\nimport Radium from 'radium';\r\nimport React from 'react';\r\nimport { delay } from 'js-util';\r\n\r\nimport api from '../../shared/api-internal';\r\nimport ContextWrapper from './ContextWrapper';\r\nimport CropMarks from '../shared/CropMarks';\r\nimport { css, PropTypes, numberToGreyscale } from '../util';\r\n\r\nconst { Style } = Radium;\r\n\r\n\r\n/**\r\n * Loads and displays a component.\r\n */\r\nclass Component extends React.Component {\r\n  static propTypes = {\r\n    current: PropTypes.instanceOf(Immutable.Map).isRequired,\r\n  };\r\n  static defaultProps = {};\r\n\r\n\r\n  size() {\r\n    const { current } = this.props;\r\n    const width = current.get('width');\r\n    const height = current.get('height');\r\n    return { width, height };\r\n  }\r\n\r\n  styles() {\r\n    const { width, height } = this.size();\r\n    const { current } = this.props;\r\n    const background = current.get('background');\r\n    let border = current.get('border');\r\n\r\n    if (border !== undefined) {\r\n      if (R.is(Number, border)) {\r\n        border = `solid 1px ${ numberToGreyscale(border) }`;\r\n      }\r\n    }\r\n\r\n    return css({\r\n      base: {\r\n        position: 'relative',\r\n        width,\r\n        height,\r\n        backgroundColor: numberToGreyscale(background),\r\n      },\r\n    });\r\n  }\r\n\r\n\r\n  handleLoaded(componentInstance) {\r\n    // Store component instance on load.\r\n    if (!R.isNil(componentInstance)) {\r\n      api.component(componentInstance);\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const styles = this.styles();\r\n    const { current } = this.props;\r\n    const { width, height } = this.size();\r\n\r\n    let styleElement;\r\n    const styleRules = current.get('style');\r\n    if (styleRules) {\r\n      styleElement = React.createElement(Style, {\r\n        scopeSelector: '.uih-Component',\r\n        rules: styleRules,\r\n      });\r\n    }\r\n\r\n    let element;\r\n    const type = current.get('componentType');\r\n    if (type) {\r\n      // Props.\r\n      const props = current.get('componentProps') || {};\r\n      props.ref = (c) => delay(() => this.handleLoaded(c));\r\n\r\n      // Children.\r\n      const children = current.get('componentChildren');\r\n      element = React.createElement(type, props, children);\r\n\r\n      const childContextTypes = current.get('componentChildContextTypes');\r\n      if (childContextTypes) ContextWrapper.childContextTypes = childContextTypes;\r\n    }\r\n\r\n    const cropMarksSize = current.get('cropMarks')\r\n        ? current.get('cropMarks.size')\r\n        : 0;\r\n\r\n\r\n    return (\r\n      <CropMarks\r\n        size={ cropMarksSize }\r\n        offset={ current.get('cropMarks.offset') }\r\n        display={ width === '100%' ? 'block' : 'inline-block' }\r\n        width={ width }\r\n        height={ height }>\r\n        <div className=\"uih-Component\" style={ styles.base }>\r\n          { styleElement }\r\n          <ContextWrapper context={ current.get('componentContext') }>\r\n            { element }\r\n          </ContextWrapper>\r\n        </div>\r\n      </CropMarks>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Radium(Component);\r\n"]}