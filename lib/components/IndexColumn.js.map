{"version":3,"sources":["../../src/components/IndexColumn.jsx"],"names":["IndexColumn","handleMouseEnter","isOver","handleMouseLeave","handleKeyDown","e","indexMode","refs","suiteTree","suite","document","addEventListener","width","props","suiteTreeLeft","suiteLeft","base","Absolute","overflow","fontFamily","userSelect","outer","transition","position","top","bottom","left","transform","specs","styles","current","currentSuite","get","elSuite","Component","propTypes","instanceOf","Map","isRequired","PropTypes","number","defaultProps"],"mappings":"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","file":"IndexColumn.js","sourcesContent":["import React from 'react';\r\nimport Radium from 'radium';\r\nimport Immutable from 'immutable';\r\n\r\nimport { css, PropTypes } from './util';\r\nimport api from '../shared/api-internal';\r\nimport SuiteTree from './SuiteTree';\r\nimport Suite from './Suite';\r\nimport { FONT_SANS } from './GlobalStyles';\r\n\r\n\r\n/**\r\n * The index column.\r\n */\r\nclass IndexColumn extends React.Component {\r\n  static propTypes = {\r\n    current: PropTypes.instanceOf(Immutable.Map).isRequired,\r\n    width: React.PropTypes.number.isRequired,\r\n  };\r\n  static defaultProps = {};\r\n\r\n\r\n  componentWillMount() {\r\n    document.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n\r\n  styles() {\r\n    const { width } = this.props;\r\n    const indexMode = api.indexMode();\r\n    let suiteTreeLeft;\r\n    let suiteLeft;\r\n\r\n    // Calculate slide position of panels.\r\n    if (indexMode && width) {\r\n      suiteTreeLeft = indexMode === 'tree' ? 0 : (0 - width);\r\n      suiteLeft = indexMode === 'suite' ? 0 : width;\r\n    }\r\n\r\n    return css({\r\n      base: {\r\n        Absolute: 0,\r\n        overflow: 'hidden',\r\n        fontFamily: FONT_SANS,\r\n        userSelect: 'none',\r\n      },\r\n      outer: {\r\n        transition: 'transform 0.15s',\r\n      },\r\n      suiteTree: {\r\n        position: 'absolute', top: 4, bottom: 0, left: 0,\r\n        width: '100%',\r\n        transform: `translateX(${ suiteTreeLeft }px)`,\r\n      },\r\n      specs: {\r\n        position: 'absolute', top: 0, bottom: 0, left: 0,\r\n        width: '100%',\r\n        transform: `translateX(${ suiteLeft }px)`,\r\n      },\r\n    });\r\n  }\r\n\r\n\r\n  handleMouseEnter = () => { this.isOver = true; };\r\n  handleMouseLeave = () => { this.isOver = false; };\r\n  handleKeyDown = (e) => {\r\n    if (this.isOver) {\r\n      // Alert child components of the key-event.\r\n      switch (api.indexMode()) {\r\n        case 'tree':\r\n          this.refs.suiteTree.handleKeyDown(e);\r\n          break;\r\n\r\n        case 'suite':\r\n          this.refs.suite.handleKeyDown(e);\r\n          break;\r\n\r\n        default: // Ignore.\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    const styles = this.styles();\r\n    const { current, width } = this.props;\r\n    const currentSuite = current.get('suite');\r\n    const indexMode = api.indexMode();\r\n\r\n    let elSuite;\r\n    if (currentSuite && indexMode === 'suite') {\r\n      elSuite = <Suite ref=\"suite\" suite={ currentSuite } current={ current } />;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        style={ styles.base }\r\n        className=\"uih\"\r\n        onMouseEnter={ this.handleMouseEnter }\r\n        onMouseLeave={ this.handleMouseLeave }>\r\n\r\n        <div style={ [styles.outer, styles.suiteTree] }>\r\n          <SuiteTree ref=\"suiteTree\" selectedSuite={ currentSuite } width={ width } />\r\n        </div>\r\n        <div style={ [styles.outer, styles.specs] }>{ elSuite }</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Radium(IndexColumn);\r\n"]}