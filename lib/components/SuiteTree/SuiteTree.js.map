{"version":3,"sources":["../../../src/components/SuiteTree/SuiteTree.jsx"],"names":["SuiteTree","handleOverSuite","e","mouseOverItem","handleMouseLeave","handleKeyDown","selectedSuite","props","item","suite","which","toggle","id","indexMode","loadSuite","base","Absolute","userSelect","overflow","overflowY","styles","width","suites","rootSuites","items","map","i","length","Component","propTypes","object","number","isRequired","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;;;;;;;;;AAGA;;;IAGMA,S;;;;;;;;;;;;;;4LAkBJC,e,GAAkB,UAACC,CAAD,EAAO;AAAE,YAAKC,aAAL,GAAqBD,CAArB;AAAyB,K,QACpDE,gB,GAAmB,YAAM;AAAE,YAAKD,aAAL,GAAqB,IAArB;AAA4B,K,QACvDE,a,GAAgB,UAACH,CAAD,EAAO;AAAA,UACbI,aADa,GACK,MAAKC,KADV,CACbD,aADa;;AAErB,UAAME,OAAO,MAAKL,aAAlB;AACA,UAAMM,QAAQD,OAAOA,KAAKC,KAAZ,GAAoB,IAAlC;AACA,UAAID,IAAJ,EAAU;AACR,gBAAQN,EAAEQ,KAAV;AACE,eAAK,EAAL;AAAS;AACPF,iBAAKG,MAAL,CAAY,KAAZ;AACA;;AAEF,eAAK,EAAL;AAAS;AACP,gBAAIF,KAAJ,EAAW;AACT,kBAAIH,iBAAiBA,cAAcM,EAAd,KAAqBH,MAAMG,EAAhD,EAAoD;AAClD,sCAAIC,SAAJ,CAAc,OAAd,EADkD,CAC1B;AACzB,eAFD,MAEO;AACL,sCAAIC,SAAJ,CAAcL,KAAd,EADK,CACiB;AACvB;AACF,aAND,MAMO;AACLD,mBAAKG,MAAL,CAAY,IAAZ;AACD;AACD;;AAEF,kBAjBF,CAiBW;AAjBX;AAmBD;AACF,K;;;;;6BAtCQ;AACP,aAAO,eAAI;AACTI,cAAM;AACJC,oBAAU,CADN;AAEJC,sBAAY,MAFR;AAGJC,oBAAU,QAHN;AAIJC,qBAAW;AAJP;AADG,OAAJ,CAAP;AAQD;;;6BAgCQ;AAAA;;AACP,UAAMC,SAAS,KAAKA,MAAL,EAAf;AADO,mBAE0B,KAAKb,KAF/B;AAAA,UAECD,aAFD,UAECA,aAFD;AAAA,UAEgBe,KAFhB,UAEgBA,KAFhB;;AAIP;;AACA,UAAMC,SAAS,cAAIC,UAAJ,EAAf;AACA,UAAMC,QAAQF,OAAOG,GAAP,CAAW,UAAChB,KAAD,EAAQiB,CAAR;AAAA,eACvB;AACE,sBADF;AAEE,eAAMA,CAFR;AAGE,iBAAQA,CAHV;AAIE,iBAAQjB,KAJV;AAKE,iBAAQa,OAAOK,MALjB;AAME,yBAAgBrB,aANlB;AAOE,uBAAc,OAAKL,eAPrB;AAQE,iBAAQoB,KARV,GADuB;AAAA,OAAX,CAAd;;AAYA,aACE;AAAA;AAAA;AACE,iBAAQD,OAAOL,IADjB;AAEE,wBAAe,KAAKX,gBAFtB;AAIIoB,cAAMG,MAAN,GAAe,CAAf,GACI;AAAA;AAAA;AAAMH;AAAN,SADJ,GAEI;AANR,OADF;AAWD;;;;EA7EqB,gBAAMI,S;;AAAxB5B,S,CACG6B,S,GAAY;AACjBvB,iBAAe,gBAAUwB,MADR;AAEjBT,SAAO,gBAAUU,MAAV,CAAiBC;AAFP,C;AADfhC,S,CAKGiC,Y,GAAe,E;kBA2ET,sBAAOjC,SAAP,C","file":"SuiteTree.js","sourcesContent":["import React from 'react';\r\nimport Radium from 'radium';\r\nimport api from '../../shared/api-internal';\r\nimport bdd from '../../shared/bdd';\r\nimport { Ul } from '../shared';\r\nimport { css, PropTypes } from '../util';\r\nimport SuiteTreeItem from './SuiteTreeItem';\r\nimport SuiteTreeEmpty from './SuiteTreeEmpty';\r\n\r\n\r\n/**\r\n * The index tree-view of [Suites].\r\n */\r\nclass SuiteTree extends React.Component {\r\n  static propTypes = {\r\n    selectedSuite: PropTypes.object,\r\n    width: PropTypes.number.isRequired,\r\n  };\r\n  static defaultProps = {};\r\n\r\n  styles() {\r\n    return css({\r\n      base: {\r\n        Absolute: 0,\r\n        userSelect: 'none',\r\n        overflow: 'hidden',\r\n        overflowY: 'auto',\r\n      },\r\n    });\r\n  }\r\n\r\n  handleOverSuite = (e) => { this.mouseOverItem = e; };\r\n  handleMouseLeave = () => { this.mouseOverItem = null; };\r\n  handleKeyDown = (e) => {\r\n    const { selectedSuite } = this.props;\r\n    const item = this.mouseOverItem;\r\n    const suite = item ? item.suite : null;\r\n    if (item) {\r\n      switch (e.which) {\r\n        case 37: // LEFT.\r\n          item.toggle(false);\r\n          break;\r\n\r\n        case 39: // RIGHT.\r\n          if (suite) {\r\n            if (selectedSuite && selectedSuite.id === suite.id) {\r\n              api.indexMode('suite'); // Drill into already loaded suite.\r\n            } else {\r\n              api.loadSuite(suite); // Load the new suite.\r\n            }\r\n          } else {\r\n            item.toggle(true);\r\n          }\r\n          break;\r\n\r\n        default: // Ignore.\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    const styles = this.styles();\r\n    const { selectedSuite, width } = this.props;\r\n\r\n    // Filter on root suites.\r\n    const suites = bdd.rootSuites();\r\n    const items = suites.map((suite, i) => (\r\n      <SuiteTreeItem\r\n        isRoot\r\n        key={ i }\r\n        index={ i }\r\n        suite={ suite }\r\n        total={ suites.length }\r\n        selectedSuite={ selectedSuite }\r\n        onOverSuite={ this.handleOverSuite }\r\n        width={ width } />\r\n    ));\r\n\r\n    return (\r\n      <div\r\n        style={ styles.base }\r\n        onMouseLeave={ this.handleMouseLeave }>\r\n        {\r\n          items.length > 0\r\n            ? <Ul>{ items }</Ul>\r\n            : <SuiteTreeEmpty />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Radium(SuiteTree);\r\n"]}