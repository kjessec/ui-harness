{"version":3,"sources":["../../../src/components/SuiteTree/SuiteTreeItem.jsx"],"names":["TEXT_COLOR","darken","hexString","SELECTED_BG_COLOR","SuiteTreeItem","props","handleClick","hasChildren","toggle","suite","isCurrent","indexMode","loadSuite","handleMouseEnter","onOverSuite","isOpen","setState","isOver","handleMouseLeave","state","isMounted","storageIsOpen","isChildSelected","level","width","indent","content","title","isSelected","index","isRoot","isFirst","widths","base","borderTop","boxSizing","position","fontSize","lineHeight","color","paddingLeft","marginRight","background","cursor","contentSelected","display","iconOuter","left","top","paddingTop","height","drillInIcon","Absolute","opacity","transform","transition","childSuites","length","selectedSuite","id","currentSuite","current","get","startsWith","undefined","localStorage","default","styles","totalChildSuites","chrevronIcon","childItems","map","item","i","name","Component","propTypes","PropTypes","object","isRequired","number","total","bool","func","defaultProps","SuiteTreeItemRadium"],"mappings":"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","file":"SuiteTreeItem.js","sourcesContent":["import React from 'react';\r\nimport Radium from 'radium';\r\nimport { delay } from 'js-util';\r\nimport { fromAlpha } from 'js-util/lib/color';\r\nimport { css } from '../util';\r\nimport Color from 'color';\r\nimport api from '../../shared/api-internal';\r\nimport { Ul, Twisty, Ellipsis, IconImage, FormattedText } from '../shared';\r\n\r\nconst TEXT_COLOR = Color('white').darken(0.6).hexString();\r\nconst SELECTED_BG_COLOR = fromAlpha(-0.08);\r\n\r\n\r\n/**\r\n * An <LI> that renders a single [Suite] list item.\r\n */\r\nclass SuiteTreeItem extends React.Component {\r\n  static propTypes = {\r\n    suite: React.PropTypes.object.isRequired,\r\n    index: React.PropTypes.number.isRequired,\r\n    total: React.PropTypes.number.isRequired,\r\n    isRoot: React.PropTypes.bool,\r\n    level: React.PropTypes.number,\r\n    selectedSuite: React.PropTypes.object,\r\n    onOverSuite: React.PropTypes.func.isRequired,\r\n    width: React.PropTypes.number.isRequired,\r\n  };\r\n  static defaultProps = {\r\n    isRoot: false,\r\n    level: 0,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isOpen: false, isOver: false, isMounted: false };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    // Ensure the item is open if a child is selected.\r\n    let isOpen = this.storageIsOpen();\r\n    if (this.isChildSelected()) { isOpen = true; }\r\n    this.toggle(isOpen);\r\n\r\n    // Indicate that the component is rendered.\r\n    // NB: Used to prevent <Twisty> from animating on inital load.\r\n    delay(() => this.setState({ isMounted: true }));\r\n  }\r\n\r\n\r\n  widths() {\r\n    const { level, width } = this.props;\r\n    let indent = 0;\r\n    if (level > 0) { indent = 15 * level; }\r\n    const content = (width ? (width - (indent + 27)) : ''); // Set so that ellipsis show.\r\n    return {\r\n      indent,\r\n      content,\r\n      title: this.isSelected() ? content - 18 : content - 5,\r\n    };\r\n  }\r\n\r\n\r\n  styles() {\r\n    const { index, isRoot } = this.props;\r\n    const { isOver } = this.state;\r\n    const isFirst = (index === 0);\r\n    const hasChildren = this.hasChildren();\r\n    const widths = this.widths();\r\n\r\n    return css({\r\n      base: {\r\n        borderTop: ((isRoot && isFirst) ? 'none' : 'solid 1px rgba(0, 0, 0, 0.04)'),\r\n        boxSizing: 'border-box',\r\n      },\r\n      content: {\r\n        position: 'relative',\r\n        width: widths.content,\r\n        fontSize: 14,\r\n        lineHeight: '36px',\r\n        color: TEXT_COLOR,\r\n        paddingLeft: (27 + widths.indent),\r\n        marginRight: 120,\r\n        ':hover': {\r\n          background: fromAlpha(-0.02),\r\n          cursor: 'pointer',\r\n        },\r\n      },\r\n      contentSelected: {\r\n        background: SELECTED_BG_COLOR,\r\n        ':hover': {\r\n          // NB: Selected item does not present 'hover' style.\r\n          background: SELECTED_BG_COLOR,\r\n        },\r\n      },\r\n      title: {\r\n        position: 'relative',\r\n        display: 'inline-block',\r\n        paddingLeft: 3,\r\n      },\r\n      iconOuter: {\r\n        boxSizing: 'border-box',\r\n        position: 'absolute',\r\n        left: 7 + widths.indent,\r\n        top: 8,\r\n        paddingLeft: (hasChildren ? 7 : 4),\r\n        paddingTop: (hasChildren ? 5 : 2),\r\n        width: 20,\r\n        height: 20,\r\n      },\r\n      drillInIcon: {\r\n        Absolute: '11 5 null null',\r\n        opacity: 0.3,\r\n        transform: isOver ? 'translateX(4px)' : null,\r\n        transition: 'transform 0.15s linear',\r\n      },\r\n    });\r\n  }\r\n\r\n\r\n  hasChildren() { return this.props.suite.childSuites.length > 0; }\r\n\r\n\r\n  isSelected() {\r\n    const { suite, selectedSuite } = this.props;\r\n    return selectedSuite\r\n              ? (suite.id === selectedSuite.id)\r\n              : false;\r\n  }\r\n\r\n\r\n  isCurrent() {\r\n    const currentSuite = api.current.get('suite');\r\n    return (currentSuite && currentSuite.id === this.props.suite.id);\r\n  }\r\n\r\n\r\n  isChildSelected() {\r\n    const { suite, selectedSuite } = this.props;\r\n    if (!selectedSuite) { return false; }\r\n    if (selectedSuite.id.length <= suite.id.length) { return false; }\r\n    return selectedSuite.id.startsWith(suite.id);\r\n  }\r\n\r\n\r\n  toggle(isOpen) {\r\n    if (this.hasChildren()) {\r\n      if (isOpen === undefined) { isOpen = !this.state.isOpen; }\r\n      this.setState({ isOpen });\r\n      this.storageIsOpen(isOpen);\r\n    }\r\n  }\r\n\r\n\r\n  storageIsOpen(isOpen) {\r\n    return api.localStorage(`suite-is-open::${ this.props.suite.id }`, isOpen, { default: false });\r\n  }\r\n\r\n\r\n  handleClick = () => {\r\n    if (this.hasChildren()) {\r\n      this.toggle();\r\n    } else {\r\n      const { suite } = this.props;\r\n      if (this.isCurrent()) {\r\n        api.indexMode('suite'); // Slide to the 'Suite' view.\r\n      } else {\r\n        api.loadSuite(suite); // Load the suite.\r\n      }\r\n    }\r\n  };\r\n\r\n  handleMouseEnter = () => {\r\n    // Alert parent that the mouse is over the [Suite].\r\n    const { suite, onOverSuite } = this.props;\r\n    onOverSuite({\r\n      suite: (this.hasChildren() ? null : suite),\r\n      toggle: (isOpen) => { this.toggle(isOpen); },\r\n    });\r\n    this.setState({ isOver: true });\r\n  };\r\n\r\n  handleMouseLeave = () => {\r\n    this.setState({ isOver: false });\r\n  };\r\n\r\n  render() {\r\n    const styles = this.styles();\r\n    const { suite, level, selectedSuite, onOverSuite, width } = this.props;\r\n    const { isOpen, isMounted } = this.state;\r\n    const totalChildSuites = suite.childSuites.length;\r\n    const hasChildren = totalChildSuites > 0;\r\n    const isSelected = this.isSelected();\r\n    const widths = this.widths();\r\n\r\n    // Prepare selected chrevron pointer.\r\n    let chrevronIcon;\r\n    if (isSelected) {\r\n      chrevronIcon = (\r\n        <div style={ styles.drillInIcon }>\r\n          <IconImage name=\"chevronRight\" />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // Prepare a list of child-suites if they exist.\r\n    let childItems;\r\n    if (isOpen && hasChildren) {\r\n      childItems = suite.childSuites.map((item, i) => (\r\n        <SuiteTreeItemRadium\r\n          key={ i }\r\n          suite={ item }\r\n          index={ i }\r\n          total={ totalChildSuites }\r\n          level={ level + 1 }\r\n          selectedSuite={ selectedSuite }\r\n          onOverSuite={ onOverSuite }\r\n          width={ width } />\r\n      ));\r\n\r\n      childItems = <Ul>{ childItems }</Ul>;\r\n    }\r\n\r\n    return (\r\n      <li style={ styles.base }>\r\n        { /* Item content */ }\r\n        <div\r\n          style={ [styles.content, isSelected && styles.contentSelected] }\r\n          onClick={ this.handleClick }\r\n          onMouseEnter={ this.handleMouseEnter }\r\n          onMouseLeave={ this.handleMouseLeave }>\r\n\r\n          <div style={ styles.iconOuter }>\r\n              {\r\n                hasChildren\r\n                  ? <Twisty isOpen={ isOpen } isAnimated={ isMounted } />\r\n                  : <IconImage name=\"suiteBook\" />\r\n              }\r\n          </div>\r\n          <div style={ styles.title }>\r\n            <Ellipsis width={ widths.title }>\r\n              <FormattedText>{ suite.name }</FormattedText>\r\n            </Ellipsis>\r\n          </div>\r\n          { chrevronIcon }\r\n\r\n        </div>\r\n\r\n        { /* Child suites (RECURSION) */ }\r\n        { childItems }\r\n\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nconst SuiteTreeItemRadium = Radium(SuiteTreeItem);\r\nexport default SuiteTreeItemRadium;\r\n"]}