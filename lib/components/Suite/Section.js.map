{"version":3,"sources":["../../../src/components/Suite/Section.jsx"],"names":["isOpenStorage","section","isOpen","localStorage","id","default","Section","props","handleClick","state","setState","base","titleBar","background","borderTop","color","darken","hexString","fontSize","padding","marginBottom","cursor","empty","textAlign","fontStyle","paddingTop","paddingBottom","styles","hasOnly","current","specs","filter","spec","isOnly","name","length","Component","propTypes","instanceOf","Map","isRequired","object","bool","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;;;;;;;;;AAGA,IAAMA,gBAAgB,SAAhBA,aAAgB,CAACC,OAAD,EAAUC,MAAV;AAAA,SACpB,sBAAIC,YAAJ,CAAiBF,QAAQG,EAAzB,EAA6BF,MAA7B,EAAqC,EAAEG,SAAS,IAAX,EAArC,CADoB;AAAA,CAAtB;;AAIA;;;;IAGMC,O;;;AAWJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA,kHACXA,KADW;;AAAA,UA4BnBC,WA5BmB,GA4BL,YAAM;AAClB,UAAMN,SAAS,CAAC,MAAKO,KAAL,CAAWP,MAA3B;AACA,YAAKQ,QAAL,CAAc,EAAER,cAAF,EAAd;AACAF,oBAAc,MAAKO,KAAL,CAAWN,OAAzB,EAAkCC,MAAlC;AACD,KAhCkB;;AAEjB,UAAKO,KAAL,GAAa,EAAEP,QAAQF,cAAcO,MAAMN,OAApB,CAAV,EAAb;AAFiB;AAGlB;;;;6BAEQ;AACP,aAAO,eAAI;AACTU,cAAM,EADG;AAETC,kBAAU;AACRC,sBAAY,qBADJ;AAERC,qBAAW,+BAFH;AAGRC,iBAAO,qBAAM,OAAN,EAAeC,MAAf,CAAsB,GAAtB,EAA2BC,SAA3B,EAHC;AAIRC,oBAAU,EAJF;AAKRC,mBAAS,UALD;AAMRC,wBAAc,CANN;AAORC,kBAAQ;AAPA,SAFD;AAWTC,eAAO;AACLC,qBAAW,QADN;AAELL,oBAAU,EAFL;AAGLM,qBAAW,QAHN;AAILT,iBAAO,qBAAM,OAAN,EAAeC,MAAf,CAAsB,GAAtB,EAA2BC,SAA3B,EAJF;AAKLQ,sBAAY,EALP;AAMLC,yBAAe;AANV;AAXE,OAAJ,CAAP;AAoBD;;;6BAQQ;AACP,UAAMC,SAAS,KAAKA,MAAL,EAAf;AADO,mBAE+B,KAAKpB,KAFpC;AAAA,UAECN,OAFD,UAECA,OAFD;AAAA,UAEU2B,OAFV,UAEUA,OAFV;AAAA,UAEmBC,OAFnB,UAEmBA,OAFnB;AAAA,UAGC3B,MAHD,GAGY,KAAKO,KAHjB,CAGCP,MAHD;;AAIP,UAAI4B,QAAQ7B,QAAQ6B,KAAR,EAAZ;AACA,UAAIF,OAAJ,EAAa;AAAEE,gBAAQA,MAAMC,MAAN,CAAa;AAAA,iBAAQC,KAAKC,MAAb;AAAA,SAAb,CAAR;AAA4C;;AAE3D,aACE;AAAA;AAAA,UAAK,OAAQN,OAAOhB,IAApB;AACE;AAAA;AAAA,YAAK,OAAQgB,OAAOf,QAApB,EAA+B,SAAU,KAAKJ,WAA9C;AACE;AAAA;AAAA;AACE,4DAAQ,QAAO,WAAf,EAA2B,QAAS,KAAKC,KAAL,CAAWP,MAA/C,GADF;AAEE;AAAA;AAAA;AAAiBD,sBAAQiC;AAAzB;AAFF;AADF,SADF;AAQIhC,kBAAU4B,MAAMK,MAAN,GAAe,CAAzB,GACI,oDAAU,OAAQL,KAAlB,EAA0B,SAAUD,OAApC,GADJ,GAEI,IAVR;AAaI3B,kBAAU4B,MAAMK,MAAN,KAAiB,CAA3B,GACI;AAAA;AAAA,YAAK,OAAQR,OAAOL,KAApB;AAAA;AAAA,SADJ,GAEI;AAfR,OADF;AAoBD;;;;EAxEmB,gBAAMc,S;;AAAtB9B,O,CACG+B,S,GAAY;AACjBR,WAAS,gBAAUS,UAAV,CAAqB,oBAAUC,GAA/B,EAAoCC,UAD5B;AAEjBvC,WAAS,gBAAUwC,MAAV,CAAiBD,UAFT;AAGjBZ,WAAS,gBAAUc;AAHF,C;AADfpC,O,CAMGqC,Y,GAAe;AACpBf,WAAS;AADW,C;kBAqET,sBAAOtB,OAAP,C","file":"Section.js","sourcesContent":["import React from 'react';\r\nimport Radium from 'radium';\r\nimport Immutable from 'immutable';\r\nimport Color from 'color';\r\nimport { css, PropTypes } from '../util';\r\nimport { FormattedText, Ellipsis, Twisty } from '../shared';\r\nimport api from '../../shared/api-internal';\r\nimport SpecList from '../SpecList';\r\n\r\n\r\nconst isOpenStorage = (section, isOpen) =>\r\n  api.localStorage(section.id, isOpen, { default: true });\r\n\r\n\r\n/**\r\n * A section of Specs.\r\n */\r\nclass Section extends React.Component {\r\n  static propTypes = {\r\n    current: PropTypes.instanceOf(Immutable.Map).isRequired,\r\n    section: PropTypes.object.isRequired,\r\n    hasOnly: PropTypes.bool,\r\n  };\r\n  static defaultProps = {\r\n    hasOnly: false,\r\n  };\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isOpen: isOpenStorage(props.section) };\r\n  }\r\n\r\n  styles() {\r\n    return css({\r\n      base: {},\r\n      titleBar: {\r\n        background: 'rgba(0, 0, 0, 0.05)',\r\n        borderTop: 'solid 1px rgba(0, 0, 0, 0.04)',\r\n        color: Color('white').darken(0.5).hexString(),\r\n        fontSize: 14,\r\n        padding: '6px 10px',\r\n        marginBottom: 3,\r\n        cursor: 'pointer',\r\n      },\r\n      empty: {\r\n        textAlign: 'center',\r\n        fontSize: 13,\r\n        fontStyle: 'italic',\r\n        color: Color('white').darken(0.5).hexString(),\r\n        paddingTop: 10,\r\n        paddingBottom: 20,\r\n      },\r\n    });\r\n  }\r\n\r\n  handleClick = () => {\r\n    const isOpen = !this.state.isOpen;\r\n    this.setState({ isOpen });\r\n    isOpenStorage(this.props.section, isOpen);\r\n  };\r\n\r\n  render() {\r\n    const styles = this.styles();\r\n    const { section, hasOnly, current } = this.props;\r\n    const { isOpen } = this.state;\r\n    let specs = section.specs();\r\n    if (hasOnly) { specs = specs.filter(spec => spec.isOnly); }\r\n\r\n    return (\r\n      <div style={ styles.base }>\r\n        <div style={ styles.titleBar } onClick={ this.handleClick }>\r\n          <Ellipsis>\r\n            <Twisty margin=\"0 5px 0 0\" isOpen={ this.state.isOpen } />\r\n            <FormattedText>{ section.name }</FormattedText>\r\n          </Ellipsis>\r\n        </div>\r\n        {\r\n          isOpen && specs.length > 0\r\n            ? <SpecList specs={ specs } current={ current } />\r\n            : null\r\n        }\r\n        {\r\n          isOpen && specs.length === 0\r\n            ? <div style={ styles.empty }>Empty</div>\r\n            : null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Radium(Section);\r\n"]}