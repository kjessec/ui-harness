{"version":3,"sources":["../../../src/components/Suite/Suite.jsx"],"names":["Suite","handleKeyDown","e","which","indexMode","hasPropTypes","base","Absolute","middle","specsList","paddingTop","overflow","overflowY","propTypesTitle","textAlign","fontWeight","fontSize","textShadow","color","background","borderTop","borderBottom","padding","props","suite","current","hasOnly","any","spec","isOnly","specs","componentProps","get","componentType","propTypes","styles","sections","filter","item","section","includeSection","map","i","undefined","maxHeight","Component","instanceOf","Map","isRequired","object","defaultProps"],"mappings":"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","file":"Suite.js","sourcesContent":["import R from 'ramda';\r\nimport React from 'react';\r\nimport Radium from 'radium';\r\nimport Immutable from 'immutable';\r\nimport { css, PropTypes } from '../util';\r\nimport { FlexEdge } from '../shared';\r\nimport api from '../../shared/api-internal';\r\nimport SuiteHeader from './SuiteHeader';\r\nimport SpecList from '../SpecList';\r\nimport Section from './Section';\r\nimport PropTypesComponent from '../PropTypes';\r\n\r\n\r\n\r\n/**\r\n * The index-column view a [Suite]'s set of specs.\r\n */\r\nclass Suite extends React.Component {\r\n  static propTypes = {\r\n    current: PropTypes.instanceOf(Immutable.Map).isRequired,\r\n    suite: PropTypes.object.isRequired,\r\n  };\r\n  static defaultProps = {};\r\n\r\n  styles(hasPropTypes) {\r\n    return css({\r\n      base: { Absolute: 0 },\r\n      middle: { Absolute: 0 },\r\n      specsList: {\r\n        Absolute: [0, 0, (hasPropTypes ? 27 : 0), 0],\r\n        paddingTop: 6,\r\n        overflow: 'hidden',\r\n        overflowY: 'auto',\r\n      },\r\n      propTypesTitle: {\r\n        Absolute: [null, 0, 0, 0],\r\n        textAlign: 'center',\r\n        fontWeight: 700,\r\n        fontSize: 16,\r\n        textShadow: '0px -1px rgba(0, 0, 0, 0.1)',\r\n        color: '#fff',\r\n        background: '#D1D1D1',\r\n        borderTop: 'solid 1px rgba(0, 0, 0, 0.05)',\r\n        borderBottom: 'solid 1px rgba(0, 0, 0, 0.05)',\r\n        padding: 3,\r\n      },\r\n    });\r\n  }\r\n\r\n\r\n  handleKeyDown = (e) => {\r\n    switch (e.which) {\r\n      case 37: // LEFT.\r\n        api.indexMode('tree'); // Slide back to the tree-view.\r\n        break;\r\n      default: // Ignore.\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    const { suite, current } = this.props;\r\n    const hasOnly = R.any(spec => spec.isOnly, suite.specs);\r\n    const componentProps = current.get('componentProps');\r\n    const componentType = current.get('componentType');\r\n    const hasPropTypes = componentType && componentType.propTypes;\r\n    const styles = this.styles(hasPropTypes);\r\n    let sections;\r\n\r\n    const specs = R.filter(item => {\r\n      if (item.section) { return false; }\r\n      return hasOnly ? item.isOnly : true;\r\n    }, suite.specs);\r\n\r\n    if (suite.sections) {\r\n      const includeSection = (section) => (hasOnly\r\n            ? R.any(item => item.isOnly, section.specs())\r\n            : true);\r\n      sections = suite.sections.map((section, i) => {\r\n        if (includeSection(section)) {\r\n          return (<Section\r\n            key={ i }\r\n            section={ section }\r\n            hasOnly={ hasOnly }\r\n            current={ current } />);\r\n        }\r\n        return undefined;\r\n      });\r\n    }\r\n    return (\r\n      <div style={ styles.base }>\r\n        <FlexEdge orientation=\"vertical\">\r\n          <SuiteHeader suite={ suite } />\r\n          <div style={ styles.middle } data-flexEdge={ 1 }>\r\n            <div style={ styles.specsList }>\r\n              <SpecList specs={ specs } current={ current } />\r\n              { sections }\r\n            </div>\r\n            { hasPropTypes && <div style={ styles.propTypesTitle }>API</div> }\r\n          </div>\r\n          {\r\n            hasPropTypes &&\r\n              <div\r\n                data-flexEdge={ {\r\n                  maxHeight: '50%',\r\n                  overflow: 'hidden',\r\n                  overflowY: 'auto' } }>\r\n                <PropTypesComponent\r\n                  props={ componentProps }\r\n                  propTypes={ componentType.propTypes } />\r\n              </div>\r\n          }\r\n        </FlexEdge>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Radium(Suite);\r\n"]}