{"version":3,"sources":["../../../src/components/shared/Icon.jsx"],"names":["OFFSET","menu","x","y","refresh","Icon","handleClick","e","handler","props","onClick","is","Function","handleMouseDown","setState","isDown","handleMouseUp","handleMouseLeave","iconOffset","name","clickOffset","state","base","textAlign","boxSizing","width","height","paddingLeft","paddingTop","cursor","absolute","Absolute","position","display","styles","opacity","Component","propTypes","func","number","string","shape","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;;;AAGA,IAAMA,SAAS;AACbC,QAAM,EAAEC,GAAG,CAAL,EAAQC,GAAG,CAAX,EADO;AAEbC,WAAS,EAAEF,GAAG,CAAL,EAAQC,GAAG,CAAX;AAFI,CAAf;;AAOA;;;;IAGME,I;;;;;;;;;;;;;;kLA0CJC,W,GAAc,UAACC,CAAD,EAAO;AACnB,UAAMC,UAAU,MAAKC,KAAL,CAAWC,OAA3B;AACA,UAAI,gBAAEC,EAAF,CAAKC,QAAL,EAAeJ,OAAf,CAAJ,EAA6B;AAAEA,gBAAQD,CAAR;AAAa;AAC7C,K,QAEDM,e,GAAkB,YAAM;AAAE,YAAKC,QAAL,CAAc,EAAEC,QAAQ,IAAV,EAAd;AAAkC,K,QAC5DC,a,GAAgB,YAAM;AAAE,YAAKF,QAAL,CAAc,EAAEC,QAAQ,KAAV,EAAd;AAAmC,K,QAC3DE,gB,GAAmB,YAAM;AAAE,YAAKH,QAAL,CAAc,EAAEC,QAAQ,KAAV,EAAd;AAAmC,K;;;;;6BAhCrD;AACP,UAAMG,aAAalB,OAAO,KAAKS,KAAL,CAAWU,IAAlB,KAA2B,EAA9C;AACA,UAAIC,cAAc,EAAlB;AACA,UAAI,KAAKC,KAAL,CAAWN,MAAf,EAAuB;AAAEK,sBAAc,KAAKX,KAAL,CAAWW,WAAX,IAA0B,CAAxC;AAA4C;AACrE,UAAME,OAAO;AACXC,mBAAW,MADA;AAEXC,mBAAW,YAFA;AAGXC,eAAO,EAHI;AAIXC,gBAAQ,EAJG;AAKXC,qBAAa,CAACT,WAAWhB,CAAX,IAAgB,CAAjB,KAAuBkB,YAAYlB,CAAZ,IAAiB,CAAxC,CALF;AAMX0B,oBAAY,CAACV,WAAWf,CAAX,IAAgB,CAAjB,KAAuBiB,YAAYjB,CAAZ,IAAiB,CAAxC,CAND;AAOX0B,gBAAQ,KAAKpB,KAAL,CAAWoB;AAPR,OAAb;;AAUA;AACA,UAAI,KAAKpB,KAAL,CAAWqB,QAAf,EAAyB;AACvBR,aAAKS,QAAL,GAAgB,KAAKtB,KAAL,CAAWqB,QAA3B;AACD,OAFD,MAEO;AACLR,aAAKU,QAAL,GAAgB,UAAhB;AACAV,aAAKW,OAAL,GAAe,cAAf;AACD;AACD,aAAO,eAAI,EAAEX,UAAF,EAAJ,CAAP;AACD;;;6BAaQ;AACP,UAAMY,SAAS,KAAKA,MAAL,EAAf;AADO,UAECC,OAFD,GAEa,KAAK1B,KAFlB,CAEC0B,OAFD;;;AAIP,aACE;AAAA;AAAA;AACE,iBAAQD,OAAOZ,IADjB;AAEE,mBAAU,KAAKhB,WAFjB;AAGE,uBAAc,KAAKO,eAHrB;AAIE,qBAAY,KAAKG,aAJnB;AAKE,wBAAe,KAAKC,gBALtB;AAME,6DAAW,MAAO,KAAKR,KAAL,CAAWU,IAA7B,EAAoC,SAAUgB,OAA9C;AANF,OADF;AAUD;;;;EAlEgB,gBAAMC,S;;AAAnB/B,I,CACGgC,S,GAAY;AACjBlB,QAAM,oBAAUkB,SAAV,CAAoBlB,IADT;AAEjBT,WAAS,gBAAU4B,IAFF;AAGjBH,WAAS,gBAAUI,MAHF;AAIjBT,YAAU,gBAAUU,MAJH;AAKjBX,UAAQ,gBAAUW,MALD;AAMjBpB,eAAa,gBAAUqB,KAAV,CAAgB;AAC3BvC,OAAG,gBAAUqC,MADc;AAE3BpC,OAAG,gBAAUoC;AAFc,GAAhB;AANI,C;AADflC,I,CAYGqC,Y,GAAe;AACpBP,WAAS,CADW;AAEpBN,UAAQ;AAFY,C;kBAyDT,sBAAOxB,IAAP,C","file":"Icon.js","sourcesContent":["import R from 'ramda';\r\nimport React from 'react';\r\nimport Radium from 'radium';\r\nimport { css, PropTypes } from '../util';\r\nimport IconImage from './IconImage';\r\n\r\n\r\nconst OFFSET = {\r\n  menu: { x: 3, y: 6 },\r\n  refresh: { x: 4, y: 4 },\r\n};\r\n\r\n\r\n\r\n/**\r\n * Represents a standard sized icon.\r\n */\r\nclass Icon extends React.Component {\r\n  static propTypes = {\r\n    name: IconImage.propTypes.name,\r\n    onClick: PropTypes.func,\r\n    opacity: PropTypes.number,\r\n    absolute: PropTypes.string,\r\n    cursor: PropTypes.string,\r\n    clickOffset: PropTypes.shape({\r\n      x: PropTypes.number,\r\n      y: PropTypes.number,\r\n    }),\r\n  };\r\n  static defaultProps = {\r\n    opacity: 1,\r\n    cursor: 'default',\r\n  };\r\n\r\n  styles() {\r\n    const iconOffset = OFFSET[this.props.name] || {};\r\n    let clickOffset = {};\r\n    if (this.state.isDown) { clickOffset = this.props.clickOffset || 0; }\r\n    const base = {\r\n      textAlign: 'left',\r\n      boxSizing: 'border-box',\r\n      width: 24,\r\n      height: 24,\r\n      paddingLeft: (iconOffset.x || 0) + (clickOffset.x || 0),\r\n      paddingTop: (iconOffset.y || 0) + (clickOffset.y || 0),\r\n      cursor: this.props.cursor,\r\n    };\r\n\r\n    // An 'absolute' position may have been passed in (optional).\r\n    if (this.props.absolute) {\r\n      base.Absolute = this.props.absolute;\r\n    } else {\r\n      base.position = 'relative';\r\n      base.display = 'inline-block';\r\n    }\r\n    return css({ base });\r\n  }\r\n\r\n\r\n  handleClick = (e) => {\r\n    const handler = this.props.onClick;\r\n    if (R.is(Function, handler)) { handler(e); }\r\n  };\r\n\r\n  handleMouseDown = () => { this.setState({ isDown: true }); };\r\n  handleMouseUp = () => { this.setState({ isDown: false }); };\r\n  handleMouseLeave = () => { this.setState({ isDown: false }); };\r\n\r\n\r\n  render() {\r\n    const styles = this.styles();\r\n    const { opacity } = this.props;\r\n\r\n    return (\r\n      <div\r\n        style={ styles.base }\r\n        onClick={ this.handleClick }\r\n        onMouseDown={ this.handleMouseDown }\r\n        onMouseUp={ this.handleMouseUp }\r\n        onMouseLeave={ this.handleMouseLeave }>\r\n        <IconImage name={ this.props.name } opacity={ opacity } />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Radium(Icon);\r\n"]}