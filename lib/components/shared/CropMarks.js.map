{"version":3,"sources":["../../../src/components/shared/CropMarks.jsx"],"names":["CropMarks","props","width","height","base","position","display","styles","children","Component","propTypes","merge","clone","oneOf","numberOrString","defaultProps"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;;;AAKA;;;IAGMA,S;;;;;;;;;;;6BAYK;AAAA,mBACmB,KAAKC,KADxB;AAAA,UACCC,KADD,UACCA,KADD;AAAA,UACQC,MADR,UACQA,MADR;;AAEP,aAAO,eAAI;AACTC,cAAM;AACJC,oBAAU,UADN;AAEJC,mBAAS,KAAKL,KAAL,CAAWK,OAFhB;AAGJJ,sBAHI;AAIJC;AAJI;AADG,OAAJ,CAAP;AAQD;;;6BAEQ;AACP,UAAMI,SAAS,KAAKA,MAAL,EAAf;AACA,UAAMN,QAAQ,KAAKA,KAAnB;AACA,aACE;AAAA;AAAA,UAAK,OAAQM,OAAOH,IAApB;AACI,aAAKH,KAAL,CAAWO,QADf;AAEE,uEAAeP,KAAf,IAAuB,MAAK,SAA5B,IAFF;AAGE,uEAAeA,KAAf,IAAuB,MAAK,UAA5B,IAHF;AAIE,uEAAeA,KAAf,IAAuB,MAAK,YAA5B,IAJF;AAKE,uEAAeA,KAAf,IAAuB,MAAK,aAA5B;AALF,OADF;AASD;;;;EApCqB,gBAAMQ,S;;AAAxBT,S,CACGU,S,GAAY,gBAAEC,KAAF,CAAQ,gBAAEC,KAAF,CAAQ,mBAASF,SAAjB,CAAR,EAAqC;AACtDJ,WAAS,gBAAUO,KAAV,CAAgB,CAAC,OAAD,EAAU,cAAV,EAA0B,QAA1B,CAAhB,CAD6C;AAEtDX,SAAO,gBAAUY,cAFqC;AAGtDX,UAAQ,gBAAUW;AAHoC,CAArC,C;AADfd,S,CAMGe,Y,GAAe,gBAAEJ,KAAF,CAAQ,gBAAEC,KAAF,CAAQ,mBAASG,YAAjB,CAAR,EAAwC;AAC5DT,WAAS,OADmD;AAE5DJ,SAAO,MAFqD;AAG5DC,UAAQ;AAHoD,CAAxC,C;kBAkCT,sBAAOH,SAAP,C","file":"CropMarks.js","sourcesContent":["import R from 'ramda';\r\nimport React from 'react';\r\nimport Radium from 'radium';\r\nimport { css, PropTypes } from '../util';\r\nimport CropMark from './CropMark';\r\n\r\n\r\n\r\n\r\n/**\r\n * Positions a set of crop-marks around it's contents.\r\n */\r\nclass CropMarks extends React.Component {\r\n  static propTypes = R.merge(R.clone(CropMark.propTypes), {\r\n    display: PropTypes.oneOf(['block', 'inline-block', 'inline']),\r\n    width: PropTypes.numberOrString,\r\n    height: PropTypes.numberOrString,\r\n  });\r\n  static defaultProps = R.merge(R.clone(CropMark.defaultProps), {\r\n    display: 'block',\r\n    width: 'auto',\r\n    height: 'auto',\r\n  });\r\n\r\n  styles() {\r\n    const { width, height } = this.props;\r\n    return css({\r\n      base: {\r\n        position: 'relative',\r\n        display: this.props.display,\r\n        width,\r\n        height,\r\n      },\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const styles = this.styles();\r\n    const props = this.props;\r\n    return (\r\n      <div style={ styles.base }>\r\n        { this.props.children }\r\n        <CropMark { ...props } edge=\"topLeft\" />\r\n        <CropMark { ...props } edge=\"topRight\" />\r\n        <CropMark { ...props } edge=\"bottomLeft\" />\r\n        <CropMark { ...props } edge=\"bottomRight\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Radium(CropMarks);\r\n"]}