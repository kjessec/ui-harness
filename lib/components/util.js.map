{"version":3,"sources":["../../src/components/util.js"],"names":["css","require","default","PropTypes","numberToGreyscale","value","is","Number","clamp","darken","hexString"],"mappings":";;;;;;;AAAA;;;;AACA;;;;;;AAGO,IAAMA,oBAAMC,QAAQ,uBAAR,EAAiCC,OAA7C;AACA,IAAMC,gCAAYF,QAAQ,cAAR,EAAwBE,SAA1C;;AAGP;;;;;;;;AAQO,IAAMC,gDAAoB,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AAC1C,MAAI,gBAAEC,EAAF,CAAKC,MAAL,EAAaF,KAAb,CAAJ,EAAyB;AACvBA,YAAQ,gBAAEG,KAAF,CAAQ,CAAR,EAAW,CAAX,EAAcH,KAAd,CAAR;AACAA,YAAQ,qBAAM,OAAN,EAAeI,MAAf,CAAsBJ,KAAtB,EAA6BK,SAA7B,EAAR;AACD;AACD,SAAOL,KAAP;AACD,CANM","file":"util.js","sourcesContent":["import R from 'ramda';\r\nimport Color from 'color';\r\n\r\n\r\nexport const css = require('js-util/lib/react-css').default;\r\nexport const PropTypes = require('react-schema').PropTypes;\r\n\r\n\r\n/**\r\n * Converts a number between 0..1 to a greyscale color (opacity of black).\r\n *   1 == black\r\n *   0 == white\r\n * @param {Number|String} value:  The value to convert.\r\n *                                Ignore (returns) strings.\r\n * @return {String} a hex value.\r\n */\r\nexport const numberToGreyscale = (value) => {\r\n  if (R.is(Number, value)) {\r\n    value = R.clamp(0, 1, value);\r\n    value = Color('white').darken(value).hexString();\r\n  }\r\n  return value;\r\n};\r\n"]}